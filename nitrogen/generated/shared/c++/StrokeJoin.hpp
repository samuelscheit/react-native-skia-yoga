///
/// StrokeJoin.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#if __has_include(<NitroModules/JSIConverter.hpp>)
#include <NitroModules/JSIConverter.hpp>
#else
#error NitroModules cannot be found! Are you sure you installed NitroModules properly?
#endif
#if __has_include(<NitroModules/NitroDefines.hpp>)
#include <NitroModules/NitroDefines.hpp>
#else
#error NitroModules cannot be found! Are you sure you installed NitroModules properly?
#endif

namespace margelo::nitro::RNSkiaYoga {

  /**
   * An enum which can be represented as a JavaScript enum (StrokeJoin).
   */
  enum class StrokeJoin {
    MITER      SWIFT_NAME(miter) = 0,
    ROUND      SWIFT_NAME(round) = 1,
    BEVEL      SWIFT_NAME(bevel) = 2,
  } CLOSED_ENUM;

} // namespace margelo::nitro::RNSkiaYoga

namespace margelo::nitro {

  // C++ StrokeJoin <> JS StrokeJoin (enum)
  template <>
  struct JSIConverter<margelo::nitro::RNSkiaYoga::StrokeJoin> final {
    static inline margelo::nitro::RNSkiaYoga::StrokeJoin fromJSI(jsi::Runtime& runtime, const jsi::Value& arg) {
      int enumValue = JSIConverter<int>::fromJSI(runtime, arg);
      return static_cast<margelo::nitro::RNSkiaYoga::StrokeJoin>(enumValue);
    }
    static inline jsi::Value toJSI(jsi::Runtime& runtime, margelo::nitro::RNSkiaYoga::StrokeJoin arg) {
      int enumValue = static_cast<int>(arg);
      return JSIConverter<int>::toJSI(runtime, enumValue);
    }
    static inline bool canConvert(jsi::Runtime&, const jsi::Value& value) {
      if (!value.isNumber()) {
        return false;
      }
      double number = value.getNumber();
      int integer = static_cast<int>(number);
      if (number != integer) {
        // The integer is not the same value as the double - we truncated floating points.
        // Enums are all integers, so the input floating point number is obviously invalid.
        return false;
      }
      // Check if we are within the bounds of the enum.
      return integer >= 0 && integer <= 2;
    }
  };

} // namespace margelo::nitro
